{"version":3,"sources":["./src/app/connect-linkedin/connect-linkedin.component.html","./src/app/connect-linkedin/connect-linkedin.component.scss","./src/app/connect-linkedin/connect-linkedin.component.ts","./src/app/connect-linkedin/connect-linkedin.module.ts","./src/app/connect-linkedin/connect-linkedin.routing.ts"],"names":[],"mappings":"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","file":"connect-linkedin.module.chunk.js","sourcesContent":["module.exports = \"<app-loader></app-loader>\\n<div class=\\\"text-center\\\" *ngIf=\\\"isLoggedIn && !isStatus\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12\\\">\\n    <h2>Profile Status: <img src=\\\"../../assets/images/connect/if_status-offline_46253.png\\\"></h2>\\n    </div>\\n      <div class=\\\"inner-container\\\">\\n          <div  class=\\\"name row\\\">\\n              <h2 >Click to Connect your LinkedIn Profile </h2>\\n          </div>\\n        <div  class=\\\"row info-box\\\">\\n            <img class=\\\"cannot-upload\\\" src=\\\"../../assets/images/conenct-upload-icon.png\\\" (click)=\\\"linkedInLogin()\\\" >\\n          </div>\\n      </div>\\n\\n\\n\\n  </div>\\n\\n</div>\\n<ng-container *ngIf=\\\"!isLoggedIn && !isStatus\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12 col-md-12\\\">\\n    <h2>Profile Status: <img src=\\\"../../assets/images/connect/if_status-offline_46253.png\\\" title=\\\"Not Connected\\\">\\n     </h2>\\n  </div>\\n\\n\\n  <!-- <h6>Profile Status: <img src=\\\"../../assets/images/connect/if_status-offline_46253.png\\\" title=\\\"Not Connected\\\"></h6> -->\\n  <form (ngSubmit)=\\\"post_linkedIn(f)\\\" #f >\\n<div class=\\\"card offset-4\\\" style=\\\"width: 18rem;\\\" >\\n  <img class=\\\"card-img-top\\\" [src]=\\\"userURL.photoUrl\\\" alt=\\\"card image\\\" name=\\\"img\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">LinkedIn Profile</h5>\\n    <p class=\\\"card-text\\\">Hi, {{userURL.name}}<br> Click to save your your profile</p>\\n  </div>\\n  <ul class=\\\"list-group list-group-flush\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" [value]=\\\"userURL.name\\\" placeholder=\\\"Name\\\" name=\\\"nm\\\">\\n\\n      </mat-form-field>\\n    </li>\\n\\n\\n    <li class=\\\"list-group-item\\\">\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" [value]=\\\"userURL.email\\\" placeholder=\\\"Email\\\" name=\\\"em\\\">\\n\\n      </mat-form-field>\\n    </li>\\n  </ul>\\n  <div class=\\\"card-body\\\">\\n    <button class=\\\"btn btn-danger\\\">CANCEL</button>\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">SAVE</button>\\n  </div>\\n</div>\\n  </form>\\n</div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"postYes && isStatus\\\">\\n    <div class=\\\"position-r\\\">\\n        <button type=\\\"button\\\" class=\\\"btn profile-btn\\\" routerLink=\\\"/manage-profiles\\\">Manage your Profile</button>\\n    </div>\\n    <div class=\\\"text-center col-lg-12 col-md-12\\\">\\n        <h2>Profile Status: <img src=\\\"../../assets/images/connect/if_status_46254.png\\\" title=\\\"Connected\\\"></h2>\\n      </div>\\n  <!-- <h6>Profile Status: <img src=\\\"../../assets/images/connect/if_status_46254.png\\\" title=\\\"Connected\\\"></h6> -->\\n    <div class=\\\"connect-card\\\" >\\n      <div class=\\\"head\\\">\\n          <h5 class=\\\"\\\">LinkedIn Profile</h5>\\n      </div>\\n\\n      <div class=\\\"img-box\\\">\\n        <img class=\\\"\\\" [src]=\\\"response.image\\\" alt=\\\"card image\\\" name=\\\"img\\\">\\n      </div>\\n      \\n      <div class=\\\"user-box text-center\\\">\\n        <p class=\\\"user-name\\\">Hi {{response.name}} </p> \\n        <p class=\\\"detail\\\"> Your Profile is Connected with LinkedIn.</p>\\n      </div>\\n      <div class=\\\"user-box\\\">\\n        <form class=\\\"sh-signup-form-fix\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput type=\\\"text\\\" [value]=\\\"response.name\\\" placeholder=\\\"Name\\\" name=\\\"nm\\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput type=\\\"text\\\" [value]=\\\"response.email\\\" placeholder=\\\"Email\\\" name=\\\"em\\\">\\n          </mat-form-field>\\n        </form>\\n      </div>\\n</div>\\n\\n</ng-container>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/connect-linkedin/connect-linkedin.component.html\n// module id = ./src/app/connect-linkedin/connect-linkedin.component.html\n// module chunks = connect-linkedin.module","module.exports = \".card {\\n  text-align: center !important;\\n  -webkit-box-shadow: 1px 1px 1px 1px #888 !important;\\n          box-shadow: 1px 1px 1px 1px #888 !important; }\\n\\n.card-img {\\n  height: 80px !important;\\n  width: 120px !important; }\\n\\n.card-img-top {\\n  width: 65%;\\n  margin-left: 18%;\\n  margin-top: 1%; }\\n\\nhr {\\n  background-color: #c00;\\n  height: 0.76px !important; }\\n\\n.mat-form-field-infix {\\n  padding: 2rem !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/connect-linkedin/connect-linkedin.component.scss\n// module id = ./src/app/connect-linkedin/connect-linkedin.component.scss\n// module chunks = connect-linkedin.module","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport {AuthService, SocialUser, LinkedinLoginProvider} from 'ng4-social-login';\nimport {LoginProviderClass} from 'angular5-social-login';\nimport {ToastsManager, ToastOptions} from 'ng2-toastr';\nimport {App_service} from '../app.service';\nimport Swal from \"sweetalert2\";\nimport {HttpService} from '../serv/http-service';\nimport {NgForm} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-connect-linkedin',\n  templateUrl: './connect-linkedin.component.html',\n  styleUrls: ['./connect-linkedin.component.scss'],\n  providers:[AuthService]\n})\nexport class ConnectLinkedinComponent implements OnInit {\n  model: any= [];\n  name;\n  response: any;\n  response1: any;\n  email;\n\n  username;\n  postYes: boolean= false;\n  image:File;\n  constructor(private  socialAuthService: AuthService, private  router: Router,public toast:ToastsManager, vcr: ViewContainerRef, private obj: App_service) {\n    this.toast.setRootViewContainerRef(vcr);\n  }\n  public user: any= SocialUser;\n  public userURL: any= LoginProviderClass;\n\n  isLoggedIn: boolean= true;\n  isStatus: boolean= false;\n\n  ngOnInit() {\n    if(this.postYes = this.isStatus= true){\n      this.get_Linked_in_data();\n    }\n    this.checkStatus();\n  }\n  static connectlinkedin() {\n    alert('opened');\n    let x = screen.width / 2 - 700 / 2;\n    let y = screen.height / 2 - 450 / 2;\n    let strWindowFeatures = \"location=yes,height=624,width=584,scrollbars=yes,status=yes,left=\" + x + \",top=\" + y;\n    // let URL = \"https://www.linkedin.com/uas/oauth2/authorization?response_type=code&client_id=77a1j72f9bf5ld&redirect_uri=\"+Config.api+\"/influencer/profile/connect-linkedin&state=49f98033f3b6a37ef2d42be0399349e46fe7b37skladkas9eed7e5cd&scope=r_basicprofile+r_emailaddress\";\n    let URL = \"https://www.linkedin.com/uas/oauth2/authorization?response_type=code&client_id=77a1j72f9bf5ld&redirect_uri=http://localhost:4200/profile/connect-linkedin&state=49f98033f3b6a37ef2d42be0399349e46fe7b37skladkas9eed7e5cd&scope=r_basicprofile+r_emailaddress\";\n    // let URL = \"https://www.linkedin.com/uas/oauth2/authorization?response_type=code&client_id=77a1j72f9bf5ld&redirect_uri=https://influencer.influexpai.com/connect-linkedin&state=49f98033f3b6a37ef2d42be0399349e46fe7b37skladkas9eed7e5cd&scope=r_basicprofile+r_emailaddress\";\n\n    let win = window.open(URL, \"_blank\", strWindowFeatures);\n    if(win.status){\n      alert(win.status);\n      console.log('Window Status is...........', win.status);\n    }\n  }\n\n  linkedInLogin(){\n    this.socialAuthService.signIn(LinkedinLoginProvider.PROVIDER_ID).then((userData) => {\n      // this.user= userData;\n      this.isLoggedIn= false;\n      this.userURL= userData;\n      console.log('user url is', this.userURL);\n      this.showSuccess();\n    })\n  }\n  refresh(): void {\n    window.location.reload();\n  }\n\n  showSuccess(){\n    this.toast.success('Please Save your Profile!', 'Success!')\n\n  }\n\n  post_linkedIn(f: NgForm){\n\n    let username = localStorage.getItem('username');\n    console.log(username);\n\n    this.obj.postLinkedInData(\n      this.userURL.name,\n      this.userURL.email,\n      this.userURL.photoUrl,\n      username\n    ).subscribe(\n      data => {\n\n        this.postYes= true;\n        this.isStatus= true;\n        // Swal('Profile get Sucessfully', '', 'success');\n        this.getSuccessfullyProfile();\n        this.get_Linked_in_data();\n\n\n      },\n      error => {\n\n        // Swal('Profile Not Get', error.toString(), 'error');\n        console.log('error is ',error);\n        alert(error.toString())\n\n      });\n  }\n\n  getSuccessfullyProfile(){\n    this.toast.success('Profile get Sucessfully!', 'Success!')\n\n  }\n  clicktoLogin(){\n    this.toast.warning('Login to Connect Your Profile', 'Please Login')\n\n  }\n\n  get_Linked_in_data(){\n    this.obj.getLinkedInData().subscribe(\n      data => {\n\n        this.response= data;\n        this.getSuccessfullyProfile();\n        },\n      error => {\n\n        this.clicktoLogin();\n\n      });\n\n  }\n\n  checkStatus(){\n    this.obj.linkedInData_Status().subscribe(\n      data => {\n        if(data['Status'] == true){\n\n          this.isStatus = true;\n        }\n        else if(data['Status'] == false)\n        {\n\n          this.isStatus= false;\n\n        }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/connect-linkedin/connect-linkedin.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {MatDialogModule} from '@angular/material';\n\nimport { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport {MatCheckboxModule} from '@angular/material';\nimport {MatNativeDateModule} from '@angular/material';\nimport {LoaderModule} from '../loader/loader.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatButtonModule} from '@angular/material';\nimport {MatFormFieldModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material';\nimport {MatRadioModule} from '@angular/material';\nimport {MatDatepickerModule} from '@angular/material';\nimport {ConnectLinkedinComponent} from './connect-linkedin.component';\n// import { DemographicComponent } from './demographic/demographic.component';\nimport {ConnectLinkenInRoutes} from './connect-linkedin.routing';\n\nimport {MatSelectModule} from '@angular/material';\n\n// import {MatDatepickerModule} from '@angular/material';\n\n@NgModule({\n  imports: [CommonModule,FormsModule,ReactiveFormsModule,MatCheckboxModule, LoaderModule,  RouterModule.forChild(ConnectLinkenInRoutes), NgbCarouselModule,MatButtonModule,MatDialogModule,MatFormFieldModule,MatInputModule,MatRadioModule,MatDatepickerModule,MatSelectModule,MatNativeDateModule ],\n  declarations: [ConnectLinkedinComponent],\n  entryComponents:[ConnectLinkedinComponent ]\n})\nexport class ConnectLinkedinModule {}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/connect-linkedin/connect-linkedin.module.ts","import {Routes} from '@angular/router';\nimport {ConnectLinkedinComponent} from './connect-linkedin.component';\n\nexport const ConnectLinkenInRoutes: Routes = [{\n  path: '',\n  component: ConnectLinkedinComponent,\n  data: {\n    heading: 'Connect LinkedIn'\n  }\n\n},\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/connect-linkedin/connect-linkedin.routing.ts"],"sourceRoot":"webpack:///"}